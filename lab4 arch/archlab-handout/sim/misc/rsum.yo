0x000:                      | .pos 0
0x000: 30f40004000000000000 | init: irmovq stack, %rsp
0x00a: 807900000000000000   |       call main
0x013: 00                   |       halt
                            | 
0x018:                      | 	.align 8
0x018:                      | ele1:
0x018: 0a00000000000000     | 	.quad 0x00a
0x020: 2800000000000000     | 	.quad ele2
0x028:                      | ele2:
0x028: b000000000000000     | 	.quad 0x0b0
0x030: 3800000000000000     | 	.quad ele3
0x038:                      | ele3:
0x038: 000c000000000000     | 	.quad 0xc00
0x040: 0000000000000000     | 	.quad 0
                            | 	
0x048:                      | rsum_list:
0x048: a0cf                 | 	pushq %r12  #callee-save registers, save it because we will change it
0x04a: 6300                 | 	xorq %rax,%rax
0x04c: 6277                 | 	andq %rdi,%rdi
0x04e: 737600000000000000   | 	je RETURN
0x057: 50c70000000000000000 | 	mrmovq 0(%rdi), %r12 #store the node value in %rsi
0x061: 50770800000000000000 | 	mrmovq 8(%rdi), %rdi #replace %rdi with the node pointer
0x06b: 804800000000000000   | 	call rsum_list
0x074: 60c0                 | 	addq %r12, %rax
0x076:                      | RETURN:
0x076: b0cf                 | 	popq %r12
0x078: 90                   | 	ret
                            | 
0x079:                      | main:
0x079: 30f71800000000000000 | 	irmovq ele1, %rdi
0x083: 804800000000000000   | 	call rsum_list
0x08c: 90                   | 	ret
                            | 
0x400:                      | 	.pos 0x400
0x400:                      | stack:
