	.pos 0
	irmovq stack, %rsp
    call main
    halt
    
    .align 8
# Source block
src:
	.quad 0x00a
	.quad 0x0b0
	.quad 0xc00
# Destination block
dest:
	.quad 0x111
	.quad 0x222
	.quad 0x333
	
main:
	irmovq $src,%rdi
	irmovq $dest,%rsi
	irmovq $3,%rdx
	call copy_block
    ret
    
copy_block:
	pushq %r12
	pushq %r13
    irmovq $0,%rax  # result = 0
	irmovq $1,%r12 # 自减
	irmovq $8,%r13 # 链表
	jmp loop
loop:
	pushq %rcx
	mrmovq 0(%rdi),%rcx
	addq %r13,%rdi  # src++
	rmmovq %rcx,%rsi  # *dest = val;
	addq %r12,%rsi  # dest++
	xorq %rcx,%rax
	subq %r12,%rdx
	
loop2:
	andq %rdx,%rdx
	jg loop
	popq %r13
	popq %r12
	ret
	
    .pos 0x300
stack:
